#!/usr/bin/env bash
set -euo pipefail
set -x

bootstrap() {
  poetry install
}

lint() {
    # pre-commit
    echo "== Pre-commit hooks =="
    pre-commit run -v -a
    echo ""

    # flake8
    echo "== Flake8 =="
    flake8 . --config=setup.cfg
    echo ""

    # mypy
    echo "== Mypy =="
    echo y | mypy --install-types --config-file setup.cfg src/
}

all() {
  lint
  test
}

test() {
  # Walkthrough tests
  cd test && pytest --pspec test_walkthrough.py ; cd -
}

local_plugin_add() {
  # Calls `poetry plugin add` using the wheel file under dist/poeblix*.whl for local testing
  poetry plugin add $PWD/dist/poeblix*.whl
}

install_poetry() {
  if [[ $OSTYPE == 'cygwin'* ]]; then
    $((Invoke-WebRequest -Uri https://install.python-poetry.org -UseBasicParsing).Content | python -)
  elif [[ $OSTYPE == 'linux-gnu'* ]] || [[ $OSTYPE == 'darwin'* ]]; then
    curl -sSL https://install.python-poetry.org | python3 -
  else
    echo "Cannot (yet) install poetry for OS "$OSTYPE
    exit 1
  fi

  # Update to latest preview version as we require 1.2+ features that are not yet officially released
  poetry self update --preview
}

uninstall_poetry() {
  if [[ $OSTYPE == 'cygwin'* ]]; then
    $((Invoke-WebRequest -Uri https://install.python-poetry.org -UseBasicParsing).Content | python - --uninstall)
  elif [[ $OSTYPE == 'linux-gnu'* ]] || [[ $OSTYPE == 'darwin'* ]]; then
    curl -sSL https://install.python-poetry.org | python3 - --uninstall
  else
    echo "Cannot (yet) install poetry for OS "$OSTYPE
    exit 1
  fi
}

reinstall_poetry() {
  uninstall_poetry
  install_poetry
}

# Comment set +x out to show commands run
set +x
$@
